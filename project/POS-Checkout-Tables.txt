create table public.pos_transactions (
  id uuid not null default gen_random_uuid (),
  transaction_number character varying(50) not null,
  pos_session_id uuid not null,
  customer_id uuid null,
  cashier_id uuid not null,
  branch_id uuid null,
  transaction_date timestamp with time zone not null default now(),
  transaction_type character varying(20) not null default 'sale'::character varying,
  subtotal numeric(10, 2) not null default 0.00,
  discount_amount numeric(10, 2) not null default 0.00,
  discount_percentage numeric(5, 2) not null default 0.00,
  tax_amount numeric(10, 2) not null default 0.00,
  total_amount numeric(10, 2) not null default 0.00,
  payment_status character varying(20) not null default 'pending'::character varying,
  status character varying(20) not null default 'active'::character varying,
  notes text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint pos_transactions_pkey primary key (id),
  constraint pos_transactions_transaction_number_key unique (transaction_number),
  constraint pos_transactions_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint pos_transactions_cashier_id_fkey foreign KEY (cashier_id) references users (id),
  constraint pos_transactions_customer_id_fkey foreign KEY (customer_id) references customers (id),
  constraint pos_transactions_pos_session_id_fkey foreign KEY (pos_session_id) references pos_sessions (id)
) TABLESPACE pg_default;

create index IF not exists idx_pos_transactions_pos_session_id on public.pos_transactions using btree (pos_session_id) TABLESPACE pg_default;

create index IF not exists idx_pos_transactions_transaction_date on public.pos_transactions using btree (transaction_date) TABLESPACE pg_default;

create index IF not exists idx_pos_transactions_payment_status on public.pos_transactions using btree (payment_status) TABLESPACE pg_default;






create table public.pos_transaction_items (
  id uuid not null default gen_random_uuid (),
  transaction_id uuid not null,
  product_id uuid not null,
  product_name character varying(200) not null,
  product_sku character varying(50) not null,
  quantity numeric(10, 2) not null default 1,
  unit_of_measure character varying(20) not null,
  unit_price numeric(10, 2) not null default 0.00,
  discount_amount numeric(10, 2) not null default 0.00,
  discount_percentage numeric(5, 2) not null default 0.00,
  line_total numeric(10, 2) not null default 0.00,
  weight_kg numeric(10, 3) null,
  expiry_date date null,
  batch_number character varying(50) null,
  created_at timestamp with time zone null default now(),
  constraint pos_transaction_items_pkey primary key (id),
  constraint pos_transaction_items_product_id_fkey foreign KEY (product_id) references products (id),
  constraint pos_transaction_items_transaction_id_fkey foreign KEY (transaction_id) references pos_transactions (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_pos_transaction_items_transaction_id on public.pos_transaction_items using btree (transaction_id) TABLESPACE pg_default;

create index IF not exists idx_pos_transaction_items_product_id on public.pos_transaction_items using btree (product_id) TABLESPACE pg_default;




create table public.pos_transaction_items (
  id uuid not null default gen_random_uuid (),
  transaction_id uuid not null,
  product_id uuid not null,
  product_name character varying(200) not null,
  product_sku character varying(50) not null,
  quantity numeric(10, 2) not null default 1,
  unit_of_measure character varying(20) not null,
  unit_price numeric(10, 2) not null default 0.00,
  discount_amount numeric(10, 2) not null default 0.00,
  discount_percentage numeric(5, 2) not null default 0.00,
  line_total numeric(10, 2) not null default 0.00,
  weight_kg numeric(10, 3) null,
  expiry_date date null,
  batch_number character varying(50) null,
  created_at timestamp with time zone null default now(),
  constraint pos_transaction_items_pkey primary key (id),
  constraint pos_transaction_items_product_id_fkey foreign KEY (product_id) references products (id),
  constraint pos_transaction_items_transaction_id_fkey foreign KEY (transaction_id) references pos_transactions (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_pos_transaction_items_transaction_id on public.pos_transaction_items using btree (transaction_id) TABLESPACE pg_default;

create index IF not exists idx_pos_transaction_items_product_id on public.pos_transaction_items using btree (product_id) TABLESPACE pg_default;




create table public.pos_payments (
  id uuid not null default gen_random_uuid (),
  transaction_id uuid not null,
  payment_method character varying(20) not null,
  payment_type character varying(50) null,
  amount numeric(10, 2) not null default 0.00,
  change_given numeric(10, 2) not null default 0.00,
  reference_number character varying(100) null,
  payment_status character varying(20) not null default 'pending'::character varying,
  processed_at timestamp with time zone null default now(),
  created_at timestamp with time zone null default now(),
  constraint pos_payments_pkey primary key (id),
  constraint pos_payments_transaction_id_fkey foreign KEY (transaction_id) references pos_transactions (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_pos_payments_transaction_id on public.pos_payments using btree (transaction_id) TABLESPACE pg_default;

create index IF not exists idx_pos_payments_payment_method on public.pos_payments using btree (payment_method) TABLESPACE pg_default;

create index IF not exists idx_pos_payments_payment_status on public.pos_payments using btree (payment_status) TABLESPACE pg_default;


create table public.inventory (
  id uuid not null default gen_random_uuid (),
  branch_id uuid not null,
  quantity_on_hand numeric(10, 2) not null default 0,
  quantity_reserved numeric(10, 2) not null default 0,
  quantity_available numeric GENERATED ALWAYS as ((quantity_on_hand - quantity_reserved)) STORED (10, 2) null,
  reorder_level numeric(10, 2) not null default 0,
  max_stock_level numeric(10, 2) not null default 0,
  last_counted timestamp with time zone null,
  updated_at timestamp with time zone null default now(),
  base_unit character varying(20) null default 'piece'::character varying,
  product_id uuid null,
  constraint inventory_pkey primary key (id),
  constraint inventory_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint inventory_product_id_fkey foreign KEY (product_id) references products (id) on delete CASCADE
) TABLESPACE pg_default;



create table public.inventory (
  id uuid not null default gen_random_uuid (),
  branch_id uuid not null,
  quantity_on_hand numeric(10, 2) not null default 0,
  quantity_reserved numeric(10, 2) not null default 0,
  quantity_available numeric GENERATED ALWAYS as ((quantity_on_hand - quantity_reserved)) STORED (10, 2) null,
  reorder_level numeric(10, 2) not null default 0,
  max_stock_level numeric(10, 2) not null default 0,
  last_counted timestamp with time zone null,
  updated_at timestamp with time zone null default now(),
  base_unit character varying(20) null default 'piece'::character varying,
  product_id uuid null,
  constraint inventory_pkey primary key (id),
  constraint inventory_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint inventory_product_id_fkey foreign KEY (product_id) references products (id) on delete CASCADE
) TABLESPACE pg_default;



create table public.audit_logs (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  table_name character varying(100) null,
  record_id uuid null,
  action character varying(20) not null,
  old_data jsonb null,
  new_data jsonb null,
  ip_address inet null,
  user_agent text null,
  created_at timestamp with time zone null default now(),
  changed_fields text[] null,
  entity_type character varying(50) null,
  entity_id uuid null,
  actor_id uuid null,
  actor_email character varying(255) null,
  target_user_id uuid null,
  target_user_email character varying(255) null,
  details text null,
  action_source character varying(20) null default 'staff'::character varying,
  module character varying(50) null default 'general'::character varying,
  branch_id uuid null,
  old_values jsonb null,
  new_values jsonb null,
  constraint audit_logs_pkey primary key (id),
  constraint audit_logs_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint audit_logs_target_user_id_fkey foreign KEY (target_user_id) references users (id) on delete set null,
  constraint audit_logs_user_id_fkey foreign KEY (user_id) references users (id)
) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_user_id on public.audit_logs using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_table_record on public.audit_logs using btree (table_name, record_id) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_created_at on public.audit_logs using btree (created_at) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_actor_id on public.audit_logs using btree (actor_id) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_target_user_id on public.audit_logs using btree (target_user_id) TABLESPACE pg_default;




create table public.pos_sessions (
  id uuid not null default gen_random_uuid (),
  cashier_id uuid not null,
  branch_id uuid null,
  session_number character varying(50) not null,
  opened_at timestamp with time zone not null default now(),
  closed_at timestamp with time zone null,
  starting_cash numeric(10, 2) null default 0.00,
  ending_cash numeric(10, 2) null,
  total_sales numeric(12, 2) null default 0.00,
  total_transactions integer null default 0,
  status public.pos_session_status not null,
  notes text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  terminal_id uuid null,
  session_type character varying(20) null default 'sale'::character varying,
  total_discounts numeric(12, 2) null default 0.00,
  total_returns numeric(12, 2) null default 0.00,
  total_taxes numeric(12, 2) null default 0.00,
  closed_by uuid null,
  cash_variance numeric GENERATED ALWAYS as ((ending_cash - (starting_cash + total_sales))) STORED (12, 2) null,
  session_duration interval GENERATED ALWAYS as ((closed_at - opened_at)) STORED null,
  constraint pos_sessions_pkey primary key (id),
  constraint pos_sessions_session_number_key unique (session_number),
  constraint pos_sessions_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint pos_sessions_cashier_id_fkey foreign KEY (cashier_id) references users (id),
  constraint pos_sessions_closed_by_fkey foreign KEY (closed_by) references users (id),
  constraint pos_sessions_terminal_id_fkey foreign KEY (terminal_id) references pos_terminals (id)
) TABLESPACE pg_default;

create index IF not exists idx_pos_sessions_opened_at on public.pos_sessions using btree (opened_at) TABLESPACE pg_default;
