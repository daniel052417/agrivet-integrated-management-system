create table public.pos_transactions (
  id uuid not null default gen_random_uuid (),
  transaction_number character varying(50) not null,
  pos_session_id uuid not null,
  customer_id uuid null,
  cashier_id uuid not null,
  branch_id uuid null,
  transaction_date timestamp with time zone not null default now(),
  transaction_type character varying(20) not null default 'sale'::character varying,
  subtotal numeric(10, 2) not null default 0.00,
  discount_amount numeric(10, 2) not null default 0.00,
  discount_percentage numeric(5, 2) not null default 0.00,
  tax_amount numeric(10, 2) not null default 0.00,
  total_amount numeric(10, 2) not null default 0.00,
  payment_status character varying(20) not null default 'pending'::character varying,
  status character varying(20) not null default 'active'::character varying,
  notes text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint pos_transactions_pkey primary key (id),
  constraint pos_transactions_transaction_number_key unique (transaction_number),
  constraint pos_transactions_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint pos_transactions_cashier_id_fkey foreign KEY (cashier_id) references users (id),
  constraint pos_transactions_customer_id_fkey foreign KEY (customer_id) references customers (id),
  constraint pos_transactions_pos_session_id_fkey foreign KEY (pos_session_id) references pos_sessions (id)
) TABLESPACE pg_default;

create index IF not exists idx_pos_transactions_pos_session_id on public.pos_transactions using btree (pos_session_id) TABLESPACE pg_default;

create index IF not exists idx_pos_transactions_transaction_date on public.pos_transactions using btree (transaction_date) TABLESPACE pg_default;

create index IF not exists idx_pos_transactions_payment_status on public.pos_transactions using btree (payment_status) TABLESPACE pg_default;






create table public.pos_transaction_items (
  id uuid not null default gen_random_uuid (),
  transaction_id uuid not null,
  product_id uuid not null,
  product_name character varying(200) not null,
  product_sku character varying(50) not null,
  quantity numeric(10, 2) not null default 1,
  unit_of_measure character varying(20) not null,
  unit_price numeric(10, 2) not null default 0.00,
  discount_amount numeric(10, 2) not null default 0.00,
  discount_percentage numeric(5, 2) not null default 0.00,
  line_total numeric(10, 2) not null default 0.00,
  weight_kg numeric(10, 3) null,
  expiry_date date null,
  batch_number character varying(50) null,
  created_at timestamp with time zone null default now(),
  constraint pos_transaction_items_pkey primary key (id),
  constraint pos_transaction_items_product_id_fkey foreign KEY (product_id) references products (id),
  constraint pos_transaction_items_transaction_id_fkey foreign KEY (transaction_id) references pos_transactions (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_pos_transaction_items_transaction_id on public.pos_transaction_items using btree (transaction_id) TABLESPACE pg_default;

create index IF not exists idx_pos_transaction_items_product_id on public.pos_transaction_items using btree (product_id) TABLESPACE pg_default;




create table public.pos_transaction_items (
  id uuid not null default gen_random_uuid (),
  transaction_id uuid not null,
  product_id uuid not null,
  product_name character varying(200) not null,
  product_sku character varying(50) not null,
  quantity numeric(10, 2) not null default 1,
  unit_of_measure character varying(20) not null,
  unit_price numeric(10, 2) not null default 0.00,
  discount_amount numeric(10, 2) not null default 0.00,
  discount_percentage numeric(5, 2) not null default 0.00,
  line_total numeric(10, 2) not null default 0.00,
  weight_kg numeric(10, 3) null,
  expiry_date date null,
  batch_number character varying(50) null,
  created_at timestamp with time zone null default now(),
  constraint pos_transaction_items_pkey primary key (id),
  constraint pos_transaction_items_product_id_fkey foreign KEY (product_id) references products (id),
  constraint pos_transaction_items_transaction_id_fkey foreign KEY (transaction_id) references pos_transactions (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_pos_transaction_items_transaction_id on public.pos_transaction_items using btree (transaction_id) TABLESPACE pg_default;

create index IF not exists idx_pos_transaction_items_product_id on public.pos_transaction_items using btree (product_id) TABLESPACE pg_default;




create table public.pos_payments (
  id uuid not null default gen_random_uuid (),
  transaction_id uuid not null,
  payment_method character varying(20) not null,
  payment_type character varying(50) null,
  amount numeric(10, 2) not null default 0.00,
  change_given numeric(10, 2) not null default 0.00,
  reference_number character varying(100) null,
  payment_status character varying(20) not null default 'pending'::character varying,
  processed_at timestamp with time zone null default now(),
  created_at timestamp with time zone null default now(),
  constraint pos_payments_pkey primary key (id),
  constraint pos_payments_transaction_id_fkey foreign KEY (transaction_id) references pos_transactions (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_pos_payments_transaction_id on public.pos_payments using btree (transaction_id) TABLESPACE pg_default;

create index IF not exists idx_pos_payments_payment_method on public.pos_payments using btree (payment_method) TABLESPACE pg_default;

create index IF not exists idx_pos_payments_payment_status on public.pos_payments using btree (payment_status) TABLESPACE pg_default;


create table public.inventory (
  id uuid not null default gen_random_uuid (),
  branch_id uuid not null,
  quantity_on_hand numeric(10, 2) not null default 0,
  quantity_reserved numeric(10, 2) not null default 0,
  quantity_available numeric GENERATED ALWAYS as ((quantity_on_hand - quantity_reserved)) STORED (10, 2) null,
  reorder_level numeric(10, 2) not null default 0,
  max_stock_level numeric(10, 2) not null default 0,
  last_counted timestamp with time zone null,
  updated_at timestamp with time zone null default now(),
  base_unit character varying(20) null default 'piece'::character varying,
  product_id uuid null,
  constraint inventory_pkey primary key (id),
  constraint inventory_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint inventory_product_id_fkey foreign KEY (product_id) references products (id) on delete CASCADE
) TABLESPACE pg_default;



create table public.inventory (
  id uuid not null default gen_random_uuid (),
  branch_id uuid not null,
  quantity_on_hand numeric(10, 2) not null default 0,
  quantity_reserved numeric(10, 2) not null default 0,
  quantity_available numeric GENERATED ALWAYS as ((quantity_on_hand - quantity_reserved)) STORED (10, 2) null,
  reorder_level numeric(10, 2) not null default 0,
  max_stock_level numeric(10, 2) not null default 0,
  last_counted timestamp with time zone null,
  updated_at timestamp with time zone null default now(),
  base_unit character varying(20) null default 'piece'::character varying,
  product_id uuid null,
  constraint inventory_pkey primary key (id),
  constraint inventory_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint inventory_product_id_fkey foreign KEY (product_id) references products (id) on delete CASCADE
) TABLESPACE pg_default;



create table public.audit_logs (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  table_name character varying(100) null,
  record_id uuid null,
  action character varying(20) not null,
  old_data jsonb null,
  new_data jsonb null,
  ip_address inet null,
  user_agent text null,
  created_at timestamp with time zone null default now(),
  changed_fields text[] null,
  entity_type character varying(50) null,
  entity_id uuid null,
  actor_id uuid null,
  actor_email character varying(255) null,
  target_user_id uuid null,
  target_user_email character varying(255) null,
  details text null,
  action_source character varying(20) null default 'staff'::character varying,
  module character varying(50) null default 'general'::character varying,
  branch_id uuid null,
  old_values jsonb null,
  new_values jsonb null,
  constraint audit_logs_pkey primary key (id),
  constraint audit_logs_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint audit_logs_target_user_id_fkey foreign KEY (target_user_id) references users (id) on delete set null,
  constraint audit_logs_user_id_fkey foreign KEY (user_id) references users (id)
) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_user_id on public.audit_logs using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_table_record on public.audit_logs using btree (table_name, record_id) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_created_at on public.audit_logs using btree (created_at) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_actor_id on public.audit_logs using btree (actor_id) TABLESPACE pg_default;

create index IF not exists idx_audit_logs_target_user_id on public.audit_logs using btree (target_user_id) TABLESPACE pg_default;




create table public.pos_sessions (
  id uuid not null default gen_random_uuid (),
  cashier_id uuid not null,
  branch_id uuid null,
  session_number character varying(50) not null,
  opened_at timestamp with time zone not null default now(),
  closed_at timestamp with time zone null,
  starting_cash numeric(10, 2) null default 0.00,
  ending_cash numeric(10, 2) null,
  total_sales numeric(12, 2) null default 0.00,
  total_transactions integer null default 0,
  status public.pos_session_status not null,
  notes text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  terminal_id uuid null,
  session_type character varying(20) null default 'sale'::character varying,
  total_discounts numeric(12, 2) null default 0.00,
  total_returns numeric(12, 2) null default 0.00,
  total_taxes numeric(12, 2) null default 0.00,
  closed_by uuid null,
  cash_variance numeric GENERATED ALWAYS as ((ending_cash - (starting_cash + total_sales))) STORED (12, 2) null,
  session_duration interval GENERATED ALWAYS as ((closed_at - opened_at)) STORED null,
  constraint pos_sessions_pkey primary key (id),
  constraint pos_sessions_session_number_key unique (session_number),
  constraint pos_sessions_branch_id_fkey foreign KEY (branch_id) references branches (id),
  constraint pos_sessions_cashier_id_fkey foreign KEY (cashier_id) references users (id),
  constraint pos_sessions_closed_by_fkey foreign KEY (closed_by) references users (id),
  constraint pos_sessions_terminal_id_fkey foreign KEY (terminal_id) references pos_terminals (id)
) TABLESPACE pg_default;

create index IF not exists idx_pos_sessions_opened_at on public.pos_sessions using btree (opened_at) TABLESPACE pg_default;


create table public.customers (
  id uuid not null default gen_random_uuid (),
  customer_number character varying(20) not null,
  first_name character varying(100) not null,
  last_name character varying(100) not null,
  email character varying(255) null,
  phone character varying(20) null,
  address text null,
  city character varying(50) null,
  province character varying(50) null,
  customer_type character varying(20) not null default 'regular'::character varying,
  is_active boolean null default true,
  created_at timestamp with time zone null default now(),
  user_id uuid null,
  customer_code character varying(20) null,
  date_of_birth date null,
  registration_date timestamp with time zone null default now(),
  total_spent numeric(12, 2) null default 0.00,
  last_purchase_date timestamp with time zone null,
  loyalty_points integer null default 0,
  loyalty_tier character varying(20) null default 'bronze'::character varying,
  total_lifetime_spent numeric(12, 2) null default 0.00,
  is_guest boolean null default false,
  guest_session_id character varying(255) null,
  updated_at timestamp with time zone null default now(),
  preferred_branch_id uuid null,
  constraint customers_pkey primary key (id),
  constraint customers_customer_number_key unique (customer_number),
  constraint customers_email_key unique (email),
  constraint customers_customer_code_key unique (customer_code),
  constraint customers_user_id_key unique (user_id),
  constraint customers_preferred_branch_id_fkey foreign KEY (preferred_branch_id) references branches (id),
  constraint customers_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;




create table public.users (
  id uuid not null default extensions.uuid_generate_v4 (),
  email character varying(255) not null,
  first_name character varying(100) not null,
  last_name character varying(100) not null,
  phone character varying(20) null,
  branch_id uuid null,
  is_active boolean null default true,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  last_login timestamp with time zone null,
  last_activity timestamp with time zone null,
  status character varying(20) null default 'offline'::character varying,
  current_session_id uuid null,
  timezone character varying(50) null,
  preferred_language character varying(10) null,
  role character varying(50) null default 'staff'::character varying,
  account_status character varying(20) null default 'active'::character varying,
  mfa_enabled boolean null default false,
  mfa_secret character varying(255) null,
  mfa_backup_codes text null,
  last_password_reset timestamp with time zone null,
  password_reset_token character varying(255) null,
  password_reset_expires timestamp with time zone null,
  password_hash character varying(255) null,
  email_verified boolean null default false,
  email_verification_token character varying(255) null,
  user_type character varying(20) null default 'staff'::character varying,
  password_salt character varying(255) null,
  failed_login_attempts integer null default 0,
  locked_until timestamp with time zone null,
  deleted_at timestamp with time zone null,
  verification_token character varying(255) null,
  token_expiry timestamp with time zone null,
  constraint users_pkey primary key (id),
  constraint users_email_key unique (email),
  constraint fk_users_branch_id foreign KEY (branch_id) references branches (id),
  constraint users_account_status_check check (
    (
      (account_status)::text = any (
        (
          array[
            'active'::character varying,
            'inactive'::character varying,
            'suspended'::character varying,
            'pending_activation'::character varying
          ]
        )::text[]
      )
    )
  )
) TABLESPACE pg_default;

create unique INDEX IF not exists idx_users_verification_token on public.users using btree (verification_token) TABLESPACE pg_default;

create index IF not exists idx_users_token_expiry on public.users using btree (token_expiry) TABLESPACE pg_default;





create table public.branches (
  id uuid not null default gen_random_uuid (),
  name character varying(100) not null,
  code character varying(10) not null,
  address text not null,
  city character varying(50) not null,
  province character varying(50) not null,
  postal_code character varying(10) null,
  phone character varying(20) null,
  email character varying(255) null,
  manager_id uuid null,
  is_active boolean null default true,
  operating_hours jsonb null,
  created_at timestamp with time zone null default now(),
  branch_type character varying(20) null default 'satellite'::character varying,
  constraint branches_pkey primary key (id),
  constraint branches_manager_id_fkey foreign KEY (manager_id) references users (id),
  constraint branches_branch_type_check check (
    (
      (branch_type)::text = any (
        (
          array[
            'main'::character varying,
            'satellite'::character varying
          ]
        )::text[]
      )
    )
  )
) TABLESPACE pg_default;



create table public.products (
  id uuid not null default gen_random_uuid (),
  sku character varying(50) not null,
  name character varying(200) not null,
  description text null,
  category_id uuid not null,
  brand character varying(100) null,
  unit_of_measure character varying(20) not null,
  weight numeric(10, 3) null,
  dimensions jsonb null,
  is_prescription_required boolean null default false,
  is_active boolean null default true,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  barcode text null,
  supplier_id uuid null,
  image_url text null,
  cost numeric(10, 2) null default 0,
  requires_expiry_date boolean null default false,
  requires_batch_tracking boolean null default false,
  is_quick_sale boolean null default false,
  batch_number character varying(50) null,
  expiry_date date null,
  constraint products_pkey primary key (id),
  constraint products_category_id_fkey foreign KEY (category_id) references categories (id),
  constraint products_supplier_id_fkey foreign KEY (supplier_id) references suppliers (id)
) TABLESPACE pg_default;



create table public.product_units (
  id uuid not null default gen_random_uuid (),
  product_id uuid not null,
  unit_name character varying(50) not null,
  unit_label character varying(20) not null,
  conversion_factor numeric(10, 4) not null,
  is_base_unit boolean null default false,
  is_sellable boolean null default true,
  price_per_unit numeric(10, 2) not null,
  min_sellable_quantity numeric(10, 3) null default 1,
  created_at timestamp with time zone null default now(),
  constraint product_units_pkey primary key (id),
  constraint product_units_product_id_unit_name_key unique (product_id, unit_name),
  constraint unique_base_unit_per_product unique (product_id, is_base_unit) deferrable initially DEFERRED,
  constraint product_units_product_id_fkey foreign KEY (product_id) references products (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_product_units_sellable on public.product_units using btree (product_id, is_sellable) TABLESPACE pg_default;

create index IF not exists idx_product_units_base on public.product_units using btree (product_id, is_base_unit) TABLESPACE pg_default
where
  (is_base_unit = true);



  create table public.categories (
  id uuid not null default gen_random_uuid (),
  name character varying(100) not null,
  description text null,
  parent_id uuid null,
  sort_order integer null default 0,
  is_active boolean null default true,
  created_at timestamp with time zone null default now(),
  constraint categories_pkey primary key (id),
  constraint categories_parent_id_fkey foreign KEY (parent_id) references categories (id)
) TABLESPACE pg_default;



create table public.staff (
  id uuid not null default gen_random_uuid (),
  first_name character varying(100) not null,
  middle_name character varying(100) null,
  last_name character varying(100) not null,
  email character varying(150) not null,
  employee_id character varying(20) null,
  department character varying(100) null,
  branch_id uuid null,
  is_active boolean null default true,
  date_of_birth date null,
  gender character varying(10) null,
  marital_status character varying(20) null,
  sss_number character varying(20) null,
  philhealth_number character varying(20) null,
  pagibig_number character varying(20) null,
  tin_number character varying(20) null,
  bank_account character varying(50) null,
  bank_name character varying(100) null,
  emergency_contact character varying(100) null,
  emergency_phone character varying(20) null,
  profile_picture character varying(500) null,
  notes text null,
  created_by uuid null,
  updated_by uuid null,
  created_at timestamp without time zone null default now(),
  updated_at timestamp without time zone null default now(),
  address character varying(255) null,
  phone character varying(20) null,
  position character varying(100) null,
  hire_date date null,
  salary numeric(12, 2) null,
  role character varying(50) null,
  employment_type character varying(20) null,
  salary_type character varying(20) null,
  work_schedule character varying(100) null,
  attendance_id character varying(50) null,
  payment_method character varying(20) null,
  work_schedule_id uuid null,
  constraint staff_pkey primary key (id),
  constraint staff_email_key unique (email),
  constraint staff_employee_id_key unique (employee_id),
  constraint fk_staff_branch foreign KEY (branch_id) references branches (id),
  constraint staff_created_by_fkey foreign KEY (created_by) references users (id),
  constraint staff_updated_by_fkey foreign KEY (updated_by) references users (id),
  constraint staff_work_schedule_id_fkey foreign KEY (work_schedule_id) references work_schedules (id)
) TABLESPACE pg_default;

create index IF not exists idx_staff_department on public.staff using btree (department) TABLESPACE pg_default;




create table public.pos_terminals (
  id uuid not null default gen_random_uuid (),
  terminal_name character varying(100) not null,
  terminal_code character varying(50) not null,
  branch_id uuid not null,
  status character varying(20) not null default 'active'::character varying,
  assigned_user_id uuid null,
  last_sync timestamp with time zone null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  notes text null,
  constraint pos_terminals_pkey primary key (id),
  constraint pos_terminals_code_key unique (terminal_code),
  constraint pos_terminals_assigned_user_id_fkey foreign KEY (assigned_user_id) references users (id),
  constraint pos_terminals_branch_id_fkey foreign KEY (branch_id) references branches (id)
) TABLESPACE pg_default;



create table public.user_roles (
  user_id uuid not null,
  role_id uuid not null,
  assigned_at timestamp with time zone null default now(),
  constraint user_roles_pkey primary key (user_id, role_id),
  constraint user_roles_role_id_fkey foreign KEY (role_id) references roles (id) on delete CASCADE,
  constraint user_roles_user_id_fkey foreign KEY (user_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_user_roles_user_id on public.user_roles using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_user_roles_role_id on public.user_roles using btree (role_id) TABLESPACE pg_default;

create index IF not exists idx_user_roles_assigned_at on public.user_roles using btree (assigned_at) TABLESPACE pg_default;